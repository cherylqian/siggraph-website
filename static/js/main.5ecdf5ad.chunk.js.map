{"version":3,"sources":["logo.svg","serviceWorker.js","App.js","Header.js","Footer.js","Navigation.js","index.js"],"names":["module","exports","__webpack_require__","p","Boolean","window","location","hostname","match","App","react_default","a","createElement","className","lib_default","Object","assign","dots","infinite","speed","slidesToShow","slidesToScroll","src","logo","alt","Component","Header","type","data-toggle","data-target","aria-controls","aria-expanded","aria-label","id","NavLink","to","Footer","Link","href","dist","DefaultLayout","_ref","component","rest","objectWithoutProperties","Route","render","matchProps","src_Header","src_Footer","Construction","_ref2","Navigation","BrowserRouter","Navigation_DefaultLayout","exact","path","ReactDOM","src_Navigation","document","getElementById","navigator","serviceWorker","ready","then","registration","unregister"],"mappings":"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","file":"static/js/main.5ecdf5ad.chunk.js","sourcesContent":["module.exports = __webpack_public_path__ + \"static/media/logo.5d5d9eef.svg\";","// In production, we register a service worker to serve assets from local cache.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on the \"N+1\" visit to a page, since previously\n// cached resources are updated in the background.\n\n// To learn more about the benefits of this model, read https://goo.gl/KwvDNy.\n// This link also includes instructions on opting out of this behavior.\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.1/8 is considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\nexport function register(config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit https://goo.gl/SC7cgQ'\n          );\n        });\n      } else {\n        // Is not local host. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl, config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the old content will have been purged and\n              // the fresh content will have been added to the cache.\n              // It's the perfect time to display a \"New content is\n              // available; please refresh.\" message in your web app.\n              console.log('New content is available; please refresh.');\n\n              // Execute callback\n              if (config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl, config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl)\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      if (\n        response.status === 404 ||\n        response.headers.get('content-type').indexOf('javascript') === -1\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready.then(registration => {\n      registration.unregister();\n    });\n  }\n}\n","import React, { Component } from \"react\";\nimport logo from \"./logo.svg\";\nimport \"./styles/App.css\";\nimport Slider from \"react-slick\";\n\nclass App extends Component {\n  render() {\n    var settings = {\n      dots: true,\n      infinite: true,\n      speed: 500,\n      slidesToShow: 1,\n      slidesToScroll: 1\n    };\n    return (\n      <div className=\"App\">\n        <Slider {...settings} className=\"mb-5\">\n          <img className=\"w-50\" src={logo} alt=\"\" />\n          <img className=\"w-50\" src={logo} alt=\"\" />\n        </Slider>\n      </div>\n    );\n  }\n}\n\nexport default App;\n","import React from \"react\";\nimport { NavLink } from \"react-router-dom\";\n\nconst Header = () => (\n  <nav className=\"navbar navbar-expand-sm navbar-light\">\n    <span className=\"navbar-brand mb-0 h1 text-dark\">\n      ACM Siggraph University of Illinois\n    </span>\n    <button\n      className=\"navbar-toggler\"\n      type=\"button\"\n      data-toggle=\"collapse\"\n      data-target=\"#navbarNav\"\n      aria-controls=\"navbarNav\"\n      aria-expanded=\"false\"\n      aria-label=\"Toggle navigation\"\n    >\n      <span className=\"navbar-toggler-icon\" />\n    </button>\n    <div\n      className=\"collapse navbar-collapse justify-content-end\"\n      id=\"navbarNav\"\n    >\n      <div className=\"navbar-nav\">\n        <NavLink to=\"/\" className=\"nav-item nav-link\">\n          Home\n        </NavLink>\n        <NavLink to=\"/projects\" className=\"nav-item nav-link\">\n          Projects\n        </NavLink>\n        <NavLink to=\"/news\" className=\"nav-item nav-link\">\n          News\n        </NavLink>\n        <NavLink to=\"/about\" className=\"nav-item nav-link\">\n          About\n        </NavLink>\n      </div>\n    </div>\n  </nav>\n);\n\nexport default Header;\n","import React from \"react\";\nimport { Link } from \"react-router-dom\";\nimport { Mail, Facebook } from \"react-feather\";\n\nconst Footer = () => (\n  <footer className=\"row\">\n    <div className=\"col\">\n      <Link to=\"/about\">Who are we?</Link>\n      <p>\n        We are an official student chapter of ACM SIGGRAPH. We have an interest\n        in all things computer graphics.\n      </p>\n    </div>\n    <div className=\"col\">\n      <Link to=\"/about\">Join us!</Link>\n      <p>\n        We are always looking to add new faces to our team. Come to one of our\n        general meetings held every Monday at 7pm in 3401 Siebel Center.\n      </p>\n    </div>\n    <div className=\"col\">\n      <a href=\"https://s2018.siggraph.org/conference/\">SIGGRAPH conference</a>\n      <p>\n        At the SIGGRAPH conference, there is something to do and see for\n        everyone. Find out more about this year's conference here and see why\n        you should attend!\n      </p>\n    </div>\n    <div className=\"col\">\n      <a\n        className=\"d-flex\"\n        href=\"https://www-s.acm.illinois.edu/mailman/listinfo/siggraph-announce\"\n      >\n        <Mail />\n        <p className=\"ml-1\">Join mailing list</p>\n      </a>\n      <a className=\"d-flex\" href=\"https://www.facebook.com/uiucacmsiggraph\">\n        <Facebook />\n        <p className=\"ml-1\">Like us on Facebook</p>\n      </a>\n    </div>\n  </footer>\n);\n\nexport default Footer;\n","import React from \"react\";\nimport { BrowserRouter as Router, Route } from \"react-router-dom\";\n\nimport App from \"./App\";\nimport Header from \"./Header\";\nimport Footer from \"./Footer\";\n\nconst Navigation = () => (\n  <Router>\n    <div>\n      <DefaultLayout exact path=\"/\" component={App} />\n      <DefaultLayout path=\"/projects\" component={Construction} />\n      <DefaultLayout path=\"/news\" component={Construction} />\n      <DefaultLayout path=\"/about\" component={Construction} />\n    </div>\n  </Router>\n);\n\nconst DefaultLayout = ({ component: Component, ...rest }) => {\n  return (\n    <Route\n      {...rest}\n      render={matchProps => (\n        <div className=\"container\">\n          <Header />\n          <Component {...matchProps} />\n          <Footer />\n        </div>\n      )}\n    />\n  );\n};\n\nconst Construction = ({ match }) => <h1>This page is under construction</h1>;\n\nexport default Navigation;\n","import React from \"react\";\nimport ReactDOM from \"react-dom\";\nimport \"./styles/index.scss\";\nimport * as serviceWorker from \"./serviceWorker\";\n\nimport Navigation from \"./Navigation\";\n\nReactDOM.render(<Navigation />, document.getElementById(\"root\"));\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: http://bit.ly/CRA-PWA\nserviceWorker.unregister();\n"],"sourceRoot":""}